import string

def decoder(enc):
    dec = ''
    for i in range(len(enc)):
        if i % 4 == 0:
            dec += chr(enc[i] ^ 0x13)
        elif i % 4 == 1:
            dec += chr(enc[i] ^ 0x37)
        elif i % 4 == 2:
            dec += chr((enc[i] + 19) & 0xff)
        else:  # i % 4 == 3
            dec += chr((enc[i] - 55) & 0xff)
    return dec

print(decoder([0x60, 0x41, 0x50, 0x9F, 0x7C, 0x44, 0x61, 0x65, 0x76, 0x4F, 0x52, 0x37]))
print(decoder([0x72, 0x47, 0x61, 0x6B, 0x22, 0x19, 0x50, 0xAB, 0x75, 0x19, 0x58, 0x98, 0x75, 0x19, 0x60, 0x9F, 0x13]))
print(decoder([0x22, 0x04, 0x20, 0x6E, 0x13]))
print(decoder([0x40, 0x78, 0x33, 0x8B, 0x44, 0x76, 0x3F, 0x7C, 0x4F, 0x7A, 0x56, 0x9A, 0x61, 0x58, 0x60, 0xA6, 0x75, 0x43, 0x49, 0x7A, 0x61, 0x4E, 0x5D, 0xAB, 0x7C, 0x50, 0x5F, 0x98, 0x63, 0x5F, 0x66, 0x37]))
print(decoder([0x5E, 0x56, 0x50, 0x9F, 0x7A, 0x59, 0x52, 0x7E, 0x66, 0x5E, 0x51, 0x37]))
print(decoder([0x70, 0x58, 0x5B, 0x9D, 0x7A, 0x50, 0x1B, 0xAB, 0x6B, 0x43, 0xED]))
print(decoder([0x40, 0x52, 0x5F, 0xAD, 0x76, 0x45, 0x1B, 0x9C, 0x6B, 0x52, 0xED]))

def djb32(s):
    h = 5381
    for c in s.upper():
        h = (h * 33 + ord(c)) & 0xffffffff
    return h

with open('exports.txt', 'rt') as f:
    exports_raw = f.read()

exports = {}
for l in exports_raw.split('\n'):
    elems = l.split()
    if len(elems) < 4 or elems[1] != 'Export':
        continue
    hv = djb32(elems[3])
    if hv in exports and exports[hv].upper() == elems[3].upper():
        continue
    assert hv not in exports
    exports[hv] = elems[3]
print(len(exports))

print(exports[0x687D20FA])